/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as FrontRouteImport } from './pages/front/route'
import { Route as FrontSystemImport } from './pages/front/system'
import { Route as FrontProjectImport } from './pages/front/project'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const FrontRouteRoute = FrontRouteImport.update({
  path: '/front',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/index.lazy').then((d) => d.Route))

const FrontSystemRoute = FrontSystemImport.update({
  path: '/system',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontProjectRoute = FrontProjectImport.update({
  path: '/project',
  getParentRoute: () => FrontRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/front': {
      id: '/front'
      path: '/front'
      fullPath: '/front'
      preLoaderRoute: typeof FrontRouteImport
      parentRoute: typeof rootRoute
    }
    '/front/project': {
      id: '/front/project'
      path: '/project'
      fullPath: '/front/project'
      preLoaderRoute: typeof FrontProjectImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/system': {
      id: '/front/system'
      path: '/system'
      fullPath: '/front/system'
      preLoaderRoute: typeof FrontSystemImport
      parentRoute: typeof FrontRouteImport
    }
  }
}

// Create and export the route tree

interface FrontRouteRouteChildren {
  FrontProjectRoute: typeof FrontProjectRoute
  FrontSystemRoute: typeof FrontSystemRoute
}

const FrontRouteRouteChildren: FrontRouteRouteChildren = {
  FrontProjectRoute: FrontProjectRoute,
  FrontSystemRoute: FrontSystemRoute,
}

const FrontRouteRouteWithChildren = FrontRouteRoute._addFileChildren(
  FrontRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/front': typeof FrontRouteRouteWithChildren
  '/front/project': typeof FrontProjectRoute
  '/front/system': typeof FrontSystemRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/front': typeof FrontRouteRouteWithChildren
  '/front/project': typeof FrontProjectRoute
  '/front/system': typeof FrontSystemRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/front': typeof FrontRouteRouteWithChildren
  '/front/project': typeof FrontProjectRoute
  '/front/system': typeof FrontSystemRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/front' | '/front/project' | '/front/system'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/front' | '/front/project' | '/front/system'
  id: '__root__' | '/' | '/front' | '/front/project' | '/front/system'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  FrontRouteRoute: typeof FrontRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  FrontRouteRoute: FrontRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/front"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/front": {
      "filePath": "front/route.tsx",
      "children": [
        "/front/project",
        "/front/system"
      ]
    },
    "/front/project": {
      "filePath": "front/project.tsx",
      "parent": "/front"
    },
    "/front/system": {
      "filePath": "front/system.tsx",
      "parent": "/front"
    }
  }
}
ROUTE_MANIFEST_END */
