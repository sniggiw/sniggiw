/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as FrontRouteImport } from './pages/front/route'
import { Route as AuthRegisterImport } from './pages/auth/register'
import { Route as AuthLoginImport } from './pages/auth/login'
import { Route as FrontVideoIndexImport } from './pages/front/video/index'
import { Route as FrontTopicIndexImport } from './pages/front/topic/index'
import { Route as FrontSignIndexImport } from './pages/front/sign/index'
import { Route as FrontLessonIndexImport } from './pages/front/lesson/index'
import { Route as FrontChapterSystemImport } from './pages/front/chapter/system'
import { Route as FrontChapterProjectImport } from './pages/front/chapter/project'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const FrontRouteRoute = FrontRouteImport.update({
  path: '/front',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/index.lazy').then((d) => d.Route))

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const FrontVideoIndexRoute = FrontVideoIndexImport.update({
  path: '/video/',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontTopicIndexRoute = FrontTopicIndexImport.update({
  path: '/topic/',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontSignIndexRoute = FrontSignIndexImport.update({
  path: '/sign/',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontLessonIndexRoute = FrontLessonIndexImport.update({
  path: '/lesson/',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontChapterSystemRoute = FrontChapterSystemImport.update({
  path: '/chapter/system',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontChapterProjectRoute = FrontChapterProjectImport.update({
  path: '/chapter/project',
  getParentRoute: () => FrontRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/front': {
      id: '/front'
      path: '/front'
      fullPath: '/front'
      preLoaderRoute: typeof FrontRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/front/chapter/project': {
      id: '/front/chapter/project'
      path: '/chapter/project'
      fullPath: '/front/chapter/project'
      preLoaderRoute: typeof FrontChapterProjectImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/chapter/system': {
      id: '/front/chapter/system'
      path: '/chapter/system'
      fullPath: '/front/chapter/system'
      preLoaderRoute: typeof FrontChapterSystemImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/lesson/': {
      id: '/front/lesson/'
      path: '/lesson'
      fullPath: '/front/lesson'
      preLoaderRoute: typeof FrontLessonIndexImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/sign/': {
      id: '/front/sign/'
      path: '/sign'
      fullPath: '/front/sign'
      preLoaderRoute: typeof FrontSignIndexImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/topic/': {
      id: '/front/topic/'
      path: '/topic'
      fullPath: '/front/topic'
      preLoaderRoute: typeof FrontTopicIndexImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/video/': {
      id: '/front/video/'
      path: '/video'
      fullPath: '/front/video'
      preLoaderRoute: typeof FrontVideoIndexImport
      parentRoute: typeof FrontRouteImport
    }
  }
}

// Create and export the route tree

interface FrontRouteRouteChildren {
  FrontChapterProjectRoute: typeof FrontChapterProjectRoute
  FrontChapterSystemRoute: typeof FrontChapterSystemRoute
  FrontLessonIndexRoute: typeof FrontLessonIndexRoute
  FrontSignIndexRoute: typeof FrontSignIndexRoute
  FrontTopicIndexRoute: typeof FrontTopicIndexRoute
  FrontVideoIndexRoute: typeof FrontVideoIndexRoute
}

const FrontRouteRouteChildren: FrontRouteRouteChildren = {
  FrontChapterProjectRoute: FrontChapterProjectRoute,
  FrontChapterSystemRoute: FrontChapterSystemRoute,
  FrontLessonIndexRoute: FrontLessonIndexRoute,
  FrontSignIndexRoute: FrontSignIndexRoute,
  FrontTopicIndexRoute: FrontTopicIndexRoute,
  FrontVideoIndexRoute: FrontVideoIndexRoute,
}

const FrontRouteRouteWithChildren = FrontRouteRoute._addFileChildren(
  FrontRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/front': typeof FrontRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/front/chapter/project': typeof FrontChapterProjectRoute
  '/front/chapter/system': typeof FrontChapterSystemRoute
  '/front/lesson': typeof FrontLessonIndexRoute
  '/front/sign': typeof FrontSignIndexRoute
  '/front/topic': typeof FrontTopicIndexRoute
  '/front/video': typeof FrontVideoIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/front': typeof FrontRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/front/chapter/project': typeof FrontChapterProjectRoute
  '/front/chapter/system': typeof FrontChapterSystemRoute
  '/front/lesson': typeof FrontLessonIndexRoute
  '/front/sign': typeof FrontSignIndexRoute
  '/front/topic': typeof FrontTopicIndexRoute
  '/front/video': typeof FrontVideoIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/front': typeof FrontRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/front/chapter/project': typeof FrontChapterProjectRoute
  '/front/chapter/system': typeof FrontChapterSystemRoute
  '/front/lesson/': typeof FrontLessonIndexRoute
  '/front/sign/': typeof FrontSignIndexRoute
  '/front/topic/': typeof FrontTopicIndexRoute
  '/front/video/': typeof FrontVideoIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/front'
    | '/auth/login'
    | '/auth/register'
    | '/front/chapter/project'
    | '/front/chapter/system'
    | '/front/lesson'
    | '/front/sign'
    | '/front/topic'
    | '/front/video'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/front'
    | '/auth/login'
    | '/auth/register'
    | '/front/chapter/project'
    | '/front/chapter/system'
    | '/front/lesson'
    | '/front/sign'
    | '/front/topic'
    | '/front/video'
  id:
    | '__root__'
    | '/'
    | '/front'
    | '/auth/login'
    | '/auth/register'
    | '/front/chapter/project'
    | '/front/chapter/system'
    | '/front/lesson/'
    | '/front/sign/'
    | '/front/topic/'
    | '/front/video/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  FrontRouteRoute: typeof FrontRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  FrontRouteRoute: FrontRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/front",
        "/auth/login",
        "/auth/register"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/front": {
      "filePath": "front/route.tsx",
      "children": [
        "/front/chapter/project",
        "/front/chapter/system",
        "/front/lesson/",
        "/front/sign/",
        "/front/topic/",
        "/front/video/"
      ]
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/front/chapter/project": {
      "filePath": "front/chapter/project.tsx",
      "parent": "/front"
    },
    "/front/chapter/system": {
      "filePath": "front/chapter/system.tsx",
      "parent": "/front"
    },
    "/front/lesson/": {
      "filePath": "front/lesson/index.tsx",
      "parent": "/front"
    },
    "/front/sign/": {
      "filePath": "front/sign/index.tsx",
      "parent": "/front"
    },
    "/front/topic/": {
      "filePath": "front/topic/index.tsx",
      "parent": "/front"
    },
    "/front/video/": {
      "filePath": "front/video/index.tsx",
      "parent": "/front"
    }
  }
}
ROUTE_MANIFEST_END */
